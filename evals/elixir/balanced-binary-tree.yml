type: write_code_and_assert
messages:
  - type: user
    text: |
      Write a function called `balanced?` that checks if a binary tree is height-balanced.

      A binary tree is represented as:
      - `nil` for an empty tree
      - `{:node, value, left, right}` for a node with a value and left/right subtrees

      A tree is balanced if for every node, the heights of its left and right subtrees differ by at most 1.

      Return just the function(s) required, not wrapped in a module.
install:
  - package: elixir
eval:
  wrap_in_module: true
  assert:
    - name: "empty_tree"
      assertion: "<%= @module_name %>.balanced?(nil) == true"
    - name: "single_node"
      assertion: "<%= @module_name %>.balanced?({:node, 1, nil, nil}) == true"
    - name: "balanced_tree"
      script: |
        balanced = {:node, 1,
                     {:node, 2, {:node, 4, nil, nil}, {:node, 5, nil, nil}},
                     {:node, 3, {:node, 6, nil, nil}, nil}}
        <%= @module_name %>.balanced?(balanced) == true
    - name: "unbalanced_tree"
      script: |
        unbalanced = {:node, 1,
                       {:node, 2,
                         {:node, 3,
                           {:node, 4, nil, nil},
                           nil},
                         nil},
                       nil}
        <%= @module_name %>.balanced?(unbalanced) == false
